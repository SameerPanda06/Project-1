{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMEER_KUMAR_PANDA\\\\SchEdu\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { getToken, getRole } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  userRole,\n  allowedRoles\n}) => {\n  const token = getToken();\n  const role = userRole || getRole();\n\n  // If token is missing, redirect to login page\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If role restriction is provided, enforce it\n  if (allowedRoles && allowedRoles.length > 0) {\n    if (!role || !allowedRoles.includes(role)) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  // Otherwise, render children\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","getToken","getRole","jsxDEV","_jsxDEV","ProtectedRoute","children","userRole","allowedRoles","token","role","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","length","includes","_c","$RefreshReg$"],"sources":["C:/Users/SAMEER_KUMAR_PANDA/SchEdu/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getToken, getRole } from '../services/authService';\r\n\r\nconst ProtectedRoute = ({ children, userRole, allowedRoles }) => {\r\n  const token = getToken();\r\n  const role = userRole || getRole();\r\n\r\n  // If token is missing, redirect to login page\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // If role restriction is provided, enforce it\r\n  if (allowedRoles && allowedRoles.length > 0) {\r\n    if (!role || !allowedRoles.includes(role)) {\r\n      return <Navigate to=\"/login\" replace />;\r\n    }\r\n  }\r\n\r\n  // Otherwise, render children\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,EAAEC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAC/D,MAAMC,KAAK,GAAGR,QAAQ,CAAC,CAAC;EACxB,MAAMS,IAAI,GAAGH,QAAQ,IAAIL,OAAO,CAAC,CAAC;;EAElC;EACA,IAAI,CAACO,KAAK,EAAE;IACV,oBAAOL,OAAA,CAACJ,QAAQ;MAACW,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIR,YAAY,IAAIA,YAAY,CAACS,MAAM,GAAG,CAAC,EAAE;IAC3C,IAAI,CAACP,IAAI,IAAI,CAACF,YAAY,CAACU,QAAQ,CAACR,IAAI,CAAC,EAAE;MACzC,oBAAON,OAAA,CAACJ,QAAQ;QAACW,EAAE,EAAC,QAAQ;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACzC;EACF;;EAEA;EACA,OAAOV,QAAQ;AACjB,CAAC;AAACa,EAAA,GAlBId,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}